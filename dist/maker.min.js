make={},function(){function a(){try{return"x"in Object.defineProperty({},"x",{})}catch(a){return!1}}a()||(window.console&&console.warn('The browser does not support defineProperty correctly (it is an IE8, the ONLY browser that has this problem)\nWARNING: Setters and getters will work as usual, but FILTERS will NOT be applied unless you use the getProp and setProp methods!\nThis means that "obj.data= 123;" will NOT trigger setter filters, although "obj.setData(123);" will.  '),Object.defineProperty=function(a,b,c){a[b]=c.value;try{a.__defineGetter__&&("get"in c&&a.__defineGetter__(b,c.get),"set"in c&&a.__defineSetter__(b,c.set))}catch(d){}})}(this),make.debounce=function(a,b){function c(c){return function(){var d=arguments;window.clearTimeout(i),i=setTimeout(function(){c.apply(a,d)},b.distance)}}if("object"!=typeof a&&"function"!=typeof a)return console.error('throttle:throttle maker requires a function, or an object as target(the first argument). All the methods will be treated as throttles. The second argument(options) accepts "methods" as an array with the names of methods you want to become throttle.');void 0===b&&(b={}),b.distance=b.distance||200;var d=b.methods;"object"==typeof a&&d&&(d=d.length&&"object"==typeof d?d:[d]);var e=d||Object.keys(a),f=null,g=0,h=e.length,i=(b.distance,null);if("object"!=typeof a)return c(a);for(;h>g;g++)"function"==typeof a[e[g]]&&(f=e[g],a[f]=c(a[f]));return a},make.indexable=function(a){function b(){var a=this,b=function(a,b){return b=b||"","object"==typeof a&&a.length||b.match(/\W/)?(isNaN(b)&&(b='"'+b+'"'),b="["+b+"]"):b="."+b,b};this.find=function(c,d,e,f){if(void 0===c)return console.error("indexable:Method find expected one argument.");f=f||[],e=e||this||a,d=d||{};var g=null,h=!1,i=void 0,j=function(a,b,c){var e=null,f=c;d.regEx?c instanceof RegExp||(c=new RegExp(c,"i")):c=new RegExp(c,""),e=d.lookingForKey?b:a[b],e=e.valueOf()||"";try{if(e.match&&e.match(c)||e==f)return!0}catch(g){console.warn("compare","A problem occurred when trying to compare values. Possible error with a regExp, perhaps?",g)}return!1};for(g in e)if(e.hasOwnProperty(g)&&"function"!=typeof e[g]){if(j(e,g,c)){f.push(b(e,g)),i=e[g],h=!0;break}if(e[g]&&"object"==typeof e[g]){if(f.push(b(e,g)),h=a.find(c,d,e[g],f))return h;f.pop()}}return h&&f&&f.length?d.returnPath!==!1?f.join(""):i:!1},this.locate=function(a){return this.find(a,{lookingForKey:!0})},this.search=this.findLike=function(a){return this.find(a,{regEx:!0})},this.locateLike=function(a){return this.find(a,{lookingForKey:!0,regEx:!0})},this.getAt=function(a,b){for(var c=a.replace(/\[/g,".").replace(/\]/g,"").split("."),d=c.length,e=b||this,f=0;d>f;f++){if(void 0===e[c[f]])return void 0;e=e[c[f]]}return e},this.query=function(a,b,c,d){if("object"!=typeof this||void 0===this.length)return console.warn("Indexable must be an array to allow queries to execute"),target;for(var e=c||0,f=this.length,g=null,h=[];f>e;e++)if(g=this.find(b,{regEx:!0,returnPath:!1},this[e])){if(!d)return e;h.push(this[e])}return h},this.queryAll=function(a,b,c){return this.query(a,b,c,!0)},this.indexable=!0}if(!a||"object"!=typeof a)return console.error("indexable:Method makeIndexable expects first argument to be an Object");if(!a.indexable){if("function"==typeof a)return b.apply(a.prototype),a;b.apply(a)}},function(){var a={};make.model=function(b){var c=function(){},d=null;for(d in b)b.hasOwnProperty(d)&&(c.prototype[d]=b[d]);c=make.tiable(c),b.identifier=(new Date).getTime(),a[b.identifier]=[],b.create=function(){var d=new c;return d.addSetterFilter(function(a,b){d.trigger(a,b)}),"function"==typeof d.oncreate&&d.oncreate.apply(d,Array.prototype.slice.call(arguments,0)),a[b.identifier].push(d),d}},make.collection=function(b){function c(b){var c=0,d=b.identifier;make.indexable(a[d]),this.getLength=function(){return a[d].length},this.first=function(){return a[d][0]||!1},this.last=function(){return a[d][this.getLength()-1]||!1},this.goTo=function(b){return 0>b?b=0:b>=this.getLength()&&(b=this.getLength()-1),c=b,a[d][b]},this.current=function(){return a[d][c]||!1},this.currentIdx=function(){return c},this.next=function(){var b=a[d][c]||!1;return b&&c++,b},this.prev=function(){var b=a[d][c]||!1;return b&&c--,b},this.reset=function(){c=0},this.get=function(b){return a[d][b]||!1},this.list=function(b,c){return b?c?a[d].slice(b,c):a[d].slice(b):a[d].slice()},this.query=function(b,e){return ret=a[d].query(b,e,c),ret!==!1&&(c=ret,ret=this.get(ret),c++),ret},this.queryAll=function(b,c){return a[d].queryAll(b,c)}}return new c(b)}}(),function(){var a=function(a,b){void 0===a&&(a=this),b=b||{};var c={};a=a.name||a.id||a.toString().substring(0,30);var d=this,e=function(a,b){var c=0;for(a=d.__makeObserving[a]||[];c<a.length;){if(a[c]===b)return c;c++}return-1};return d.__makeObserving={"*":[]},this.on=function(a,b){if(b||(b=a),"function"!=typeof b)throw new Error("observer:Invalid listener!\nWhen adding listeners to observables, it is supposed to receive a function as callback.");return"string"==typeof a?(d.__makeObserving[a]||(d.__makeObserving[a]=[]),d.__makeObserving[a].push(b)):d.__makeObserving["*"].push(b),this},this.once=function(a,b){return b.once=!0,this.on(a,b),this},this.onceAt=function(a,b){if(void 0!==c[a])try{b(c[a])}catch(d){console.error('observer:A listener produced an error! "atOnce" trigger '+a,d,b)}else this.once(a,b);return this},this.at=function(a,b){if(void 0!==c[a])try{b(c[a])}catch(d){console.error('observer:A listener produced an error! "at" trigger '+a,d,b)}return this.on(a,b),this},this.off=function(a,b){if(!a)throw new Error('observer:Invalid function passed to "off" method');return"function"==typeof a&&(b=a,a="*"),d.__makeObserving[a].splice(e(a,b),1),this},this.settable||make.setAndGettable(this),this.addSetterFilter(function(a,b){return d.trigger(a,b),b}),this.trigger=function(b,e){var f=0,g=0,h=[];for(void 0===e&&(e=b,b="*"),h=d.__makeObserving[b]?d.__makeObserving[b]:[],g=h.length;g>f;f++)try{h[f](e),h[f].once===!0&&this.off(b,h[f])}catch(i){console.error("observer:Failed to execute a function from a listener.\nListening to changes on "+b+"\nAt "+a)}return"*"!=b&&this.trigger("*",e),c[b]=e,this},this.observable||(this.observable=!0),this};make.observable=function(b,c){var d=null;if(c=c||{},b.nodeType)return b;if("object"==typeof b&&c.recursive!==!1&&b!=make)for(d in b)!b[d]||b[d].observable||"object"!=typeof b[d]||b[d].length||make.observable(b[d],c);return a.apply(b.prototype||b,[b,c]),b}}(),make.readonly=function(a,b){var c=null;if("object"!=typeof a)return console.error('throttle:throttle maker requires an object as target(the first argument). All the methods will be treated as throttles. The second argument(options) accepts "methods" as an array with the names of methods you want to become throttle.');void 0===b&&(b={});for(c in a)a.hasOwnProperty(c)&&Object.defineProperty(a,c,{enumerable:!0,configurable:!1,writable:!1,value:a[c]});return a},function(){make.setAndGettable=function(a,b){function c(a,b,c,d){var e=c,f=e;if(a&&a.length)for(l=a.length,h=0;l>h;h++)"*"===b?(e=a[h](d,e),void 0===e&&(e=f)):(e=a[h](e),void 0===e&&(e=f));return e}function d(a,b){var d=b,e=f[a];return d=c(e,a,b),e=f["*"],d=c(e,"*",d,a)}function e(a,b){var d=b,e=g[a];return d=c(e,a,b),e=g["*"],d=c(e,"*",d,a)}if(b=b||{},"function"==typeof a)return b.isPrototypeOf=a,make.setAndGettable(a.prototype,b);b.specificOnly=b.specificOnly||!1,b.setter=b.setter||!0,b.getter=b.getter||!0,b.filterIn=b.filterIn||!1,b.filterOut=b.filterOut||!1,b.protected=b.protected||!0;var f={"*":[]},g={"*":[]};b.filterIn&&f["*"].push(b.filterIn),b.filterOut&&g["*"].push(b.filterOut);var h=null;for(h in a)"function"!=typeof a[h]&&!function(a,c){var f=a[c],g=c[0].toUpperCase()+c.substring(1);a["set"+g]||(a["set"+g]=function(e){this.__makeSetGetValue||(this.__makeSetGetValue={});var g=null;try{g=d(c,e)}catch(h){return a}return void 0!==g&&(b.isPrototypeOf?this.__makeSetGetValue[c]=g:f=g),this}),a["get"+g]||"__make"==g.substring(0,6)||(a["get"+g]=function(){var a=null;return b.isPrototypeOf?(this.__makeSetGetValue||(this.__makeSetGetValue={}),a=this.__makeSetGetValue[c]):a=f,a=e(c,a)}),b.isPrototypeOf,b.protected&&"__make"!=g.substring(0,6)&&Object.defineProperty(a,c,{enumerable:!0,configurable:!1,set:function(a){return this["set"+g](a),this},get:function(){return this["get"+g]()}})}(a,h,b.isPrototypeOf);return b.setter&&!b.specificOnly&&(a.set=function(c,d){var e=null,f="";if("object"==typeof c){for(e in c)c.hasOwnProperty(e)&&(f="set"+(e[0].toUpperCase()+e.substring(1)),this[f]?this[f](c[e]):b.protected||(this[e]=c[e]));return this}return a["set"+(c[0].toUpperCase()+c.substring(1))](d)}),b.getter&&!b.specificOnly&&(a.get=function(b){return a["get"+(b[0].toUpperCase()+b.substring(1))]()}),!a.addSetterFilter&&b.setter&&(a.addSetterFilter=function(a,b){return b||(b=a,a="*"),f[a]||(f[a]=[]),f[a].push(b),this}),!a.addGetterFilter&&b.getter&&(a.addGetterFilter=function(a,b){return b||(b=a,a="*"),g[a]||(g[a]=[]),g[a].push(b),this}),a}}(),make.throttle=function(a,b){function c(b){return function(){return j.getTime()+i<=(new Date).getTime()?(j=new Date,b.apply(a,arguments)):void 0}}if("object"!=typeof a&&"function"!=typeof a)return console.error('throttle:throttle maker requires a function or an object as target(the first argument). All the methods will be treated as throttles. The second argument(options) accepts "methods" as an array with the names of methods you want to become throttle.');void 0===b&&(b={}),b.distance=b.distance||100;var d=b.methods;d&&(d=d.length&&"object"==typeof d?d:[d]);var e=d||Object.keys(a),f=null,g=0,h=e.length,i=b.distance,j=new Date((new Date).getTime()-i);if("object"!=typeof a)return c(a);for(;h>g;g++)"function"==typeof a[e[g]]&&(f=e[g],a[f]=c(a[f]));return a},make.tiable=function(a){function b(){function a(a,b){var d=null,e=null;for(d in c)c[d][a]?(e=c[d][a],e.target[e.prop]=b):c[d]["*"]&&(e=c[d]["*"],e.target[a]=b);return b}var b=this,c={},d=function(a){var b=a.name||a.id;return a._makerData=a._makerData||{},a._makerData.ref?a._makerData.ref:(b=!b&&a.prototype?a.prototype.name||a.valueOf().substring(0,40):(new Date).getTime(),a._makerData.ref=b,b)};this.tie=function(a,e,f){var g;return f=f||"*",1===arguments.length&&(e=a,a="*"),g=d(e),c[g]||(c[g]={}),c[g][a]?b:(c[g][a]={target:e,prop:f},b)},make.observable(this),this.addSetterFilter(a),this.tiable=!0,this.untie=function(a,b){a._makerData&&a._makerData.ref&&(b?delete c[a._makerData.ref][b]:delete c[a._makerData.ref])}}if(!a||"object"!=typeof a&&"function"!=typeof a)throw new Error("Invalid type of object or class passed to tiable!");return"function"==typeof a&&a.prototype?(b.apply(a.prototype),a):(b.apply(a),this)},make.worker=function(a,b){function c(a){function b(b){var c=new Blob([b]),d=new Worker(window.URL.createObjectURL(c));return d.onmessage=function(b){a.workerFinished(b.data),window.URL.revokeObjectURL(c)},d}var c=a.toString();return c=" self.onmessage = function(e) { \n self.postMessage(("+c,c+=").apply(self, e.data))};\n ",c.match(/document|window|body/)?(console.warn("worker:Function passed to make.worker tries to access DOM elements. The function will work, but will not be a worker"),c):function(){var d=Array.prototype.slice.call(arguments,0);"function"==typeof d[d.length-1]&&(a.workerFinished=d.pop());var e=b(c);e.postMessage(d)}}if("object"!=typeof a&&"function"!=typeof a)return console.error('worker:Worker maker requires a function or an object as target(the first argument). All the methods will be treated as workers, but you can pass in the second argument(options), the property "methods" with an array with the names of methods you want, only they will become workers.');b=b||{};var d=b.methods;d&&(d=d.length&&"object"==typeof d?d:[d]);var e=d||Object.keys(a),f=null,g=0,h=e.length;if("object"!=typeof a)return c(a);for(;h>g;g++)"function"==typeof a[e[g]]&&(f=e[g],a[f]=c(a[f]));return a};